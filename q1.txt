1.

/**
 * Created by Avsek on 5/8/2017.
 */
public class LinkedList {
        Node head;
        
        class Node
        {
            int data;
            Node next;
            Node(int d)
            {
                data = d;
                next = null;
            }
        }

        /* Inserts a new Node at front of the list. */
        public void push(int new_data)
        {
            Node new_node = new Node(new_data);
            new_node.next = head;
            head = new_node;
        }
        
        void deleteNode(int position)
        {
            if (head == null)
                return;
            
            Node temp = head;
            
            if (position == 0)
            {
                head = temp.next;   // Change head
                return;
            }
            
            for (int i=0; temp!=null && i<position-1; i++)
                temp = temp.next;
            
            if (temp == null || temp.next == null)
                return;
            
            Node next = temp.next.next;

            temp.next = next;  
        }

       
        public void printList()
        {
            Node tnode = head;
            while (tnode != null)
            {
                System.out.print(tnode.data+" ");
                tnode = tnode.next;
            }
        }

        public static void main(String[] args)
        {
       
            LinkedList llist = new LinkedList();

            llist.push(5);
            llist.push(4);
            llist.push(3);
            llist.push(2);
            llist.push(1);

            System.out.println("\nCreated Linked list is: ");
            llist.printList();

            llist.deleteNode(1);  // Delete node at position 1; position starts from 0

            System.out.println("\nLinked List after Deletion at position 1: ");
            llist.printList();
        }
    } 



20.

import java.util.ArrayList;
import java.util.List;

/**
 * Created by Avsek on 5/8/2017.
 */
public class SumOfMultiples {
    public static void main(String[] args) {
        int sumOfThree = 0;
        int sumOfFive = 0;
        List<Integer> listOfThree = new ArrayList<>();
        List<Integer> listOfFive = new ArrayList<>();
        for(int i = 3; i<1000; i=i+3){
            listOfThree.add(i);
        }
        for (int i = 5; i<1000; i=i+5){
            listOfFive.add(i);
        }
        for(int n: listOfThree)
            sumOfThree += n;

        for (int n: listOfFive)
            sumOfFive += n;

        System.out.println("Final Sum :" + sumOfThree + sumOfFive);
    }
}
